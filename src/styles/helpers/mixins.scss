/**
 *  Media query for breakpoint
 *
 *  Accepts:
 *  - $value: {String||Number} Breakpoint name (list found in variables.scss)
 *  - $direction: {String} direction of media query (default: 'min')
 *
 *  Usage:
 *
 *  .selector {
 *    @include mq('xs') {
 *      color: red;
 *    }
 *    @include mq(992px) {
 *      color: green;
 *    }
 *  }
 *
 */

@mixin mq($value, $direction: 'min') {
  @if type-of($value) == number and unitless($value) {
    $value: $value + "px";
  }

  @if type-of($value) == string {
    @each $breakpoint in $breakpoints {
      @if index($breakpoint, $value) != null {
        $value: nth($breakpoint, 1);
      }
    }
  }

  @media only screen and (#{$direction}-width: #{$value}) {
    @content;
  }
}

/**
 *  Hide element but make it accessible to screen readers
 *
 *  Usage:
 *
 *  .selector {
 *    @include visually-hidden;
 *  }
 *
 */

@mixin visually-hidden() {
  // stylelint-disable-next-line
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0 0 0 0);
}

/**
 *  Reverse the properties applied by @mixin visually-hidden
 *
 *  Accepts:
 *  - $position: {String} Positioning method for element
 *
 *  Usage:
 *
 *  .selector {
 *    @include visually-shown(relative);
 *  }
 */

@mixin visually-shown($position: inherit) {
  // stylelint-disable-next-line
  position: $position !important;
  overflow: auto;
  width: auto;
  height: auto;
  margin: 0;
  clip: auto;
}
